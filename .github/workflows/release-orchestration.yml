name: CoreState v2.0 Release Orchestration

on:
  push:
    tags:
      - 'v2.*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'stable'
        type: choice
        options:
          - stable
          - beta
          - canary

env:
  DOCKER_REGISTRY: ghcr.io
  KUBERNETES_CLUSTER: corestate-prod
  ML_TRAINING_CLUSTER: ml-cluster-prod

jobs:
  security-scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [ 'apps/android', 'services', 'module', 'apps/daemon' ]
    steps:
      - uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '${{ matrix.component }}'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

  build-android:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build Android App
        run: |
          chmod +x gradlew
          ./gradlew :apps:android:androidApp:assembleRelease
          ./gradlew :apps:android:androidApp:bundleRelease
      - name: Rename Android artifacts
        run: |
          mkdir -p release-artifacts/android
          cp apps/android/androidApp/build/outputs/apk/release/*.apk release-artifacts/android/CoreState-v2.0.0.apk || true
          cp apps/android/androidApp/build/outputs/bundle/release/*.aab release-artifacts/android/CoreState-v2.0.0.aab || true
      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: corestate-android-v2.0.0
          path: release-artifacts/android/

  build-daemon:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - name: Install AArch64 Linker
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu
      - uses: actions/checkout@v4
      - name: Install Rust MUSL target
        run: rustup target add x86_64-unknown-linux-musl aarch64-unknown-linux-musl
      - name: Build Daemon
        run: |
          cd apps/daemon
          cargo build --release --target x86_64-unknown-linux-musl
          cargo build --release --target aarch64-unknown-linux-musl
      - name: Upload Daemon Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: daemon-${{ github.sha }}
          path: apps/daemon/target/

  build-kernelsu-module:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
      - name: Build KernelSU Module
        run: |
          cd module
          # Create comprehensive module package
          mkdir -p release-artifacts/module
          
          # Copy module files with proper structure
          cp -r native release-artifacts/module/
          cp -r kernel_patches release-artifacts/module/
          cp module.prop release-artifacts/module/
          
          # Create install script
          cat > release-artifacts/module/install.sh << 'EOF'
          #!/system/bin/sh
          # CoreState KernelSU Module Installer
          echo "Installing CoreState KernelSU Module v2.0.0"
          
          # Set proper permissions
          chmod 644 $MODPATH/native/corestate_module.c
          chmod 644 $MODPATH/native/Makefile
          chmod 755 $MODPATH/native/
          
          # Create module info
          echo "CoreState KernelSU Module v2.0.0 installed successfully" > $MODPATH/README.md
          echo "Use KernelSU Manager to enable/disable this module" >> $MODPATH/README.md
          
          ui_print "CoreState Module installed!"
          ui_print "Reboot required to take effect"
          EOF
          
          chmod 755 release-artifacts/module/install.sh
          
          # Create the zip package
          cd release-artifacts/module
          zip -r ../CoreState-KernelSU-Module-v2.0.0.zip . -x "*.git*"
          
      - name: Upload KernelSU Module
        uses: actions/upload-artifact@v4
        with:
          name: corestate-kernelsu-module-v2.0.0
          path: module/release-artifacts/CoreState-KernelSU-Module-v2.0.0.zip

  build-microservices:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build Microservices
        run: |
          chmod +x gradlew
          ./gradlew build
          # Docker build would happen here, requires docker login etc.
          echo "Docker build placeholder for ${{ env.DOCKER_REGISTRY }}/corestate/services:${{ github.ref_name }}"

  create-release:
    needs: [build-android, build-daemon, build-kernelsu-module, build-microservices]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create release package structure
        run: |
          mkdir -p release-package
          
          # Copy Android app
          cp artifacts/corestate-android-v2.0.0/* release-package/ || true
          
          # Copy KernelSU module
          cp artifacts/corestate-kernelsu-module-v2.0.0/* release-package/ || true
          
          # Copy daemon binaries
          mkdir -p release-package/daemon
          cp -r artifacts/daemon-${{ github.sha }}/* release-package/daemon/ || true
          
          # Create comprehensive README
          cat > release-package/README.md << 'EOF'
          # CoreState v2.0 - Complete Backup System
          
          **Author:** Wiktor (overspend1)
          **Version:** 2.0.0
          **Release Date:** $(date +"%Y-%m-%d")
          
          ## Complete Android-Managed Backup Solution
          
          CoreState v2.0 is an enterprise-grade backup system that provides:
          - 📱 **Android-Only Management** - No web interfaces, everything through mobile
          - 🔒 **Enterprise Security** - End-to-end encryption with hardware acceleration  
          - 🤖 **AI-Powered Optimization** - ML-driven backup scheduling and anomaly detection
          - ⚡ **System-Level Integration** - KernelSU module with COW snapshots
          - 🌐 **Real-Time Sync** - CRDT-based P2P synchronization
          - 🏢 **Microservices Architecture** - Scalable distributed backend
          
          ## Installation Guide
          
          ### 1. Android App Installation
          ```bash
          adb install CoreState-v2.0.0.apk
          ```
          
          ### 2. KernelSU Module Installation
          - Open KernelSU Manager
          - Install from storage: `CoreState-KernelSU-Module-v2.0.0.zip`
          - Reboot device
          
          ### 3. Daemon Deployment
          ```bash
          # Extract daemon
          tar -xzf corestate-daemon-*.tar.gz
          
          # Deploy daemon
          sudo ./install-daemon.sh
          
          # Start services
          systemctl start corestate-daemon
          ```
          
          ## Key Features
          
          - **Complete System Administration via Android**
          - **Real-time Backup Monitoring & Control**
          - **ML-based Anomaly Detection & Performance Optimization**
          - **Hardware-accelerated Encryption & Compression**
          - **Kernel-level File System Integration**
          - **Multi-device P2P Synchronization**
          - **Enterprise Multi-tenancy Support**
          
          ## System Requirements
          
          - **Android:** 10+ with KernelSU
          - **Server:** Linux x86_64/ARM64
          - **Network:** TCP/UDP connectivity
          - **Storage:** Minimum 1GB for daemon
          
          Built with ❤️ by Wiktor/overspend1
          EOF
          
          # List final package contents
          echo "Release package contents:"
          ls -la release-package/
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-package/*
          body: |
            # 🚀 CoreState v2.0 - Complete Android-Managed Backup System
            
            **Created by:** Wiktor (overspend1)
            **Version:** 2.0.0
            
            ## 📦 What's Included
            
            - **CoreState-v2.0.0.apk** - Android management application
            - **CoreState-KernelSU-Module-v2.0.0.zip** - KernelSU integration module
            - **Daemon binaries** - Backend services (x86_64 & ARM64)
            - **Complete documentation** - Installation and usage guides
            
            ## ✨ Key Features
            
            - 📱 **Android-Only Management** - Complete system control from mobile
            - 🤖 **AI-Powered Optimization** - ML-driven backup scheduling & anomaly detection
            - 🔒 **Enterprise Security** - End-to-end encryption with hardware acceleration
            - ⚡ **System Integration** - KernelSU module with COW snapshots
            - 🌐 **Real-Time Sync** - CRDT-based P2P synchronization
            - 🏢 **Microservices Architecture** - Scalable distributed backend
            
            ## 🛠️ Installation
            
            1. **Install Android App:** `adb install CoreState-v2.0.0.apk`
            2. **Flash KernelSU Module:** Use KernelSU Manager with the .zip file
            3. **Deploy Backend:** Extract and run daemon on your server
            
            ## 🎯 Built For
            
            - Enterprise backup solutions
            - Personal data synchronization
            - System administrators who prefer mobile management
            - Users requiring advanced security and performance
            
            **⭐ Star this repo if you find it useful!**
          draft: false
          prerelease: false