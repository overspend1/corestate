apiVersion: v1
kind: Service
metadata:
  name: backup-engine-svc
  namespace: corestate
  labels:
    app: backup-engine
    component: core
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
spec:
  selector:
    app: backup-engine
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
  - name: grpc
    protocol: TCP
    port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backup-engine
  namespace: corestate
  labels:
    app: backup-engine
    component: core
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/backup-engine-role
automountServiceAccountToken: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-engine-config
  namespace: corestate
  labels:
    app: backup-engine
    component: core
data:
  application.yml: |
    server:
      port: 8080
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: always
      metrics:
        export:
          prometheus:
            enabled: true
    logging:
      level:
        com.corestate: INFO
        org.springframework: WARN
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    spring:
      application:
        name: backup-engine
      jpa:
        hibernate:
          ddl-auto: validate
        show-sql: false
      datasource:
        hikari:
          maximum-pool-size: 20
          minimum-idle: 5
          connection-timeout: 30000
      redis:
        timeout: 5000
        lettuce:
          pool:
            max-active: 20
            max-idle: 8
            min-idle: 2
---
apiVersion: v1
kind: Secret
metadata:
  name: backup-engine-secrets
  namespace: corestate
  labels:
    app: backup-engine
    component: core
type: Opaque
stringData:
  database-url: "jdbc:postgresql://postgres:5432/corestate"
  redis-url: "redis://redis:6379"
  aws-access-key-id: "PLACEHOLDER_ACCESS_KEY"
  aws-secret-access-key: "PLACEHOLDER_SECRET_KEY"